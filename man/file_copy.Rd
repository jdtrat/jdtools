% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/func_files.R
\name{file_copy}
\alias{file_copy}
\title{Copy Existing Files to a new Directory}
\usage{
file_copy(path, new_path)
}
\arguments{
\item{path}{A character string of the file path to be copied.}

\item{new_path}{A character string of the path where the file should be
copied to.}
}
\value{
The new path (invisibly) if the file is copied. Nothing otherwise.
}
\description{
This function is a wrapper around \code{\link[fs:copy]{fs::file_copy()}}, with the modification that,
if a file exists at the \code{new_path} the user will be prompted to overwrite it.
}
\examples{

if (interactive()) {
  # Create a test file
  jdtools::file_new_text("test-file_copy", open = FALSE)

  # Copy the file with no problem
  jdtools::file_copy(path = "test-file_copy.txt",
                     new_path = "test-file_copy-2.txt")
  # Upon repeating, this will prompt the user whether or nott
  # test-file_copy-2.txt should be overwritten.
  jdtools::file_copy(path = "test-file_copy.txt",
                     new_path = "test-file_copy-2.txt")

  # A copied file can be piped into `jdtools::file_open()`
  jdtools::file_copy(path = "test-file_copy.txt",
                     new_path = "test-file_copy-3.txt") \%>\%
    jdtools::file_open()

}


}
