% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_vec.R
\name{sub_between}
\alias{sub_between}
\title{Subset a vector for values within a specified range}
\usage{
sub_between(vec, left, right, subset = TRUE)
}
\arguments{
\item{vec}{A numeric vector}

\item{left}{The leftmost (lower) boundary value}

\item{right}{The rightmost (upper) boundary value}

\item{subset}{Logical: TRUE and only the values within the specified
boundaries will be returned from the supplied vector. FALSE and only
logical indicators will be.}
}
\value{
If \code{subset = TRUE} (default), this function returns the supplied
vector subsetted within the specified boundaries. If \code{subset = FALSE}, this
function returns a logical vector indicating whether a specific entry in
the supplied vector is within the specified range.
}
\description{
This function is a modified version of \code{\link[dplyr:between]{dplyr::between()}}. Unlike \code{dplyr}'s
version, \code{sub_between} returns the subset of the supplied vector within the
specified boundaries. To mimic the behavior of \code{\link[dplyr:between]{dplyr::between()}}, you can
set \code{subset = FALSE}.
}
\examples{
# Create a vector from 0 to 20
x <- seq(1,20)
# Save x_lower as the lower half of the vector
x_lower <- sub_between(vec = x, left = min(x), right = median(x))

# Save x_upper as the upper half of the vector
x_upper <- sub_between(vec = x, left = median(x), right = max(x))

# Combine the vectors and check its equal to the original
# Using all.equal because `sub_between()` coerces to numeric class
all.equal(c(x_lower, x_upper), x)

# Get the vector for all values between 5 and 10
x5_10 <- sub_between(vec = x, left = 5, right = 10)

# To return logical indices, like `dplyr::between()`,
# you can set `subset = FALSE`:
sub_between(vec = x, left = 5, right = 10, subset = FALSE)

# To return the vector, like with `dplyr::between()`, you would subset
# it as follows:

x_indexed <- x[sub_between(vec = x, left = 5, right = 10, subset = FALSE)]

# Check that the values are equal
all.equal(x5_10, x_indexed)

}
